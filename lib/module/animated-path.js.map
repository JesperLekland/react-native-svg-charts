{"version":3,"sources":["animated-path.js"],"names":["AnimatedPath","props","state","d","newD","animate","oldD","interpolator","interpolate","interpolatePath","_animate","cancelAnimationFrame","animation","start","requestAnimationFrame","timestamp","delta","animationDuration","component","setNativeProps","setState","ref","Component","propTypes","PropTypes","bool","number","renderPlaceholder","func","Path","defaultProps"],"mappings":"g4BAAA,qDACA,6DACA,gDACA,wE,igDAEMA,CAAAA,Y,4GACJ,sBAAYC,KAAZ,CAAmB,2DACjB,uBAAMA,KAAN,EAEA,MAAKC,KAAL,CAAa,CAACC,CAAC,CAAEF,KAAK,CAACE,CAAV,CAAb,CAHiB,aAIlB,C,oGAEkBF,K,CAAO,iBACG,KAAKA,KADR,CACdG,IADc,aACjBD,CADiB,CACRE,OADQ,aACRA,OADQ,IAEdC,CAAAA,IAFc,CAENL,KAFM,CAEjBE,CAFiB,CAIxB,KAAKC,IAAL,CAAYA,IAAZ,CAEA,GAAIA,IAAI,GAAKE,IAAb,CAAmB,CACjB,OACD,CAED,GAAI,CAACD,OAAD,EAAYD,IAAI,GAAK,IAArB,EAA6BE,IAAI,GAAK,IAA1C,CAAgD,CAC9C,OACD,CAED,KAAKF,IAAL,CAAYA,IAAZ,CACA,KAAKG,YAAL,CAAoBC,WAAW,CAACC,eAAZ,CAA4BH,IAA5B,CAAkCF,IAAlC,CAApB,CAEA,KAAKM,QAAL,GACD,C,mEAEsB,CACrBC,oBAAoB,CAAC,KAAKC,SAAN,CAApB,CACD,C,0CAEQC,K,CAAO,iBACdF,oBAAoB,CAAC,KAAKC,SAAN,CAApB,CACA,KAAKA,SAAL,CAAiBE,qBAAqB,CAAC,SAACC,SAAD,CAAe,CACpD,GAAI,CAACF,KAAL,CAAY,CACVA,KAAK,CAAGE,SAAR,CACD,CAGD,GAAMC,CAAAA,KAAK,CAAG,CAACD,SAAS,CAAGF,KAAb,EAAsB,MAAI,CAACZ,KAAL,CAAWgB,iBAA/C,CAGA,GAAID,KAAK,CAAG,CAAZ,CAAe,CAEb,MAAI,CAACE,SAAL,CAAeC,cAAf,CAA8B,CAAChB,CAAC,CAAE,MAAI,CAACC,IAAT,CAA9B,EAEA,OACD,CAED,GAAMD,CAAAA,CAAC,CAAG,MAAI,CAACI,YAAL,CAAkBS,KAAlB,CAAV,CACA,MAAI,CAACE,SAAL,CAAeC,cAAf,CAA8B,CAAChB,CAAC,CAADA,CAAD,CAA9B,EAOA,MAAI,CAACiB,QAAL,CAAc,MAAI,CAAClB,KAAnB,CAA0B,UAAM,CAC9B,MAAI,CAACQ,QAAL,CAAcG,KAAd,EACD,CAFD,EAGD,CA3BqC,CAAtC,CA4BD,C,uCAEQ,iBACP,MAAO,8BAAC,oBAAD,wBAAM,GAAG,CAAE,aAACQ,IAAD,QAAU,CAAA,MAAI,CAACH,SAAL,CAAiBG,IAA3B,EAAX,EAAgD,KAAKpB,KAArD,mEAAP,CACD,C,0BAjEwBqB,gB,EAoE3BtB,YAAY,CAACuB,SAAb,gBACElB,OAAO,CAAEmB,mBAAUC,IADrB,CAEER,iBAAiB,CAAEO,mBAAUE,MAF/B,CAGEC,iBAAiB,CAAEH,mBAAUI,IAH/B,EAIKC,qBAAKN,SAJV,EAOAvB,YAAY,CAAC8B,YAAb,CAA4B,CAC1BzB,OAAO,CAAE,KADiB,CAE1BY,iBAAiB,CAAE,GAFO,CAG1BU,iBAAiB,CAAE,mCAAM,KAAN,EAHO,CAA5B,C,aAMe3B,Y","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Path} from 'react-native-svg';\nimport * as interpolate from 'd3-interpolate-path';\n\nclass AnimatedPath extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {d: props.d};\n  }\n\n  componentDidUpdate(props) {\n    const {d: newD, animate} = this.props;\n    const {d: oldD} = props;\n\n    this.newD = newD;\n\n    if (newD === oldD) {\n      return;\n    }\n\n    if (!animate || newD === null || oldD === null) {\n      return;\n    }\n\n    this.newD = newD;\n    this.interpolator = interpolate.interpolatePath(oldD, newD);\n\n    this._animate();\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.animation);\n  }\n\n  _animate(start) {\n    cancelAnimationFrame(this.animation);\n    this.animation = requestAnimationFrame((timestamp) => {\n      if (!start) {\n        start = timestamp;\n      }\n\n      // Get the delta on how far long in our animation we are.\n      const delta = (timestamp - start) / this.props.animationDuration;\n\n      // If we're above 1 then our animation should be complete.\n      if (delta > 1) {\n        // Just to be safe set our final value to the new graph path.\n        this.component.setNativeProps({d: this.newD});\n        // Stop our animation loop.\n        return;\n      }\n\n      const d = this.interpolator(delta);\n      this.component.setNativeProps({d});\n      // console.log(this.interpolator)\n      // this.tween && console.log(this.tween.tween(delta))\n      // Tween the SVG path value according to what delta we're currently at.\n\n      // Update our state with the new tween value and then jump back into\n      // this loop.\n      this.setState(this.state, () => {\n        this._animate(start);\n      });\n    });\n  }\n\n  render() {\n    return <Path ref={(ref) => (this.component = ref)} {...this.props} />;\n  }\n}\n\nAnimatedPath.propTypes = {\n  animate: PropTypes.bool,\n  animationDuration: PropTypes.number,\n  renderPlaceholder: PropTypes.func,\n  ...Path.propTypes,\n};\n\nAnimatedPath.defaultProps = {\n  animate: false,\n  animationDuration: 300,\n  renderPlaceholder: () => null,\n};\n\nexport default AnimatedPath;\n"]}