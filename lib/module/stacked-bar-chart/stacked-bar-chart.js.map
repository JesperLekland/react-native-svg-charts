{"version":3,"sources":["stacked-bar-chart.js"],"names":["BarChart","width","height","event","nativeEvent","layout","setState","domain","data","props","horizontal","contentInset","left","right","spacingInner","spacingOuter","state","scale","scaleLinear","range","scaleBand","map","_","index","paddingInner","paddingOuter","top","bottom","x","y","series","colors","keys","array","merge","serie","keyIndex","entry","entryIndex","path","shape","area","x0","d","x1","_index","bandwidth","defined","isNaN","color","key","y0","y1","values","gridMax","gridMin","extent","offset","order","valueAccessor","stack","value","item","animate","animationDuration","style","numberOfTicks","children","length","getSeries","indexes","calcIndexes","calcExtent","ticks","xDomain","yDomain","calcXScale","calcYScale","areas","calcAreas","extraProps","flex","_onLayout","React","Children","child","belowChart","cloneElement","bar","svg","stackOrderNone","stackOffsetNone","PureComponent","propTypes","PropTypes","arrayOf","object","string","isRequired","func","any","number","bool","defaultProps","showZeroAxis","showGrid"],"mappings":"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","sourcesContent":["import * as array from 'd3-array';\nimport * as scale from 'd3-scale';\nimport * as shape from 'd3-shape';\nimport PropTypes from 'prop-types';\nimport React, {PureComponent} from 'react';\nimport {View} from 'react-native';\nimport Svg from 'react-native-svg';\nimport Path from '../animated-path';\n\nclass BarChart extends PureComponent {\n  static extractDataPoints(\n    data,\n    keys,\n    order = shape.stackOrderNone,\n    offset = shape.stackOffsetNone,\n  ) {\n    const series = shape.stack().keys(keys).order(order).offset(offset)(data);\n\n    //double merge arrays to extract just the values\n    return array.merge(array.merge(series));\n  }\n\n  state = {\n    width: 0,\n    height: 0,\n  };\n\n  _onLayout(event) {\n    const {\n      nativeEvent: {\n        layout: {height, width},\n      },\n    } = event;\n    this.setState({height, width});\n  }\n\n  calcXScale(domain) {\n    const {data} = this.props;\n\n    const {\n      horizontal,\n      contentInset: {left = 0, right = 0},\n      spacingInner,\n      spacingOuter,\n    } = this.props;\n\n    const {width} = this.state;\n\n    if (horizontal) {\n      return scale\n        .scaleLinear()\n        .domain(domain)\n        .range([left, width - right]);\n    }\n\n    // use index as domain identifier instead of value since\n    // domain must be same length as number of bars\n    // same value can occur at several places in data\n    return scale\n      .scaleBand()\n      .domain(data.map((_, index) => index))\n      .range([left, width - right])\n      .paddingInner([spacingInner])\n      .paddingOuter([spacingOuter]);\n  }\n\n  calcYScale(domain) {\n    const {data} = this.props;\n\n    const {\n      horizontal,\n      contentInset: {top = 0, bottom = 0},\n      spacingInner,\n      spacingOuter,\n    } = this.props;\n\n    const {height} = this.state;\n\n    if (horizontal) {\n      return scale\n        .scaleBand()\n        .domain(data.map((_, index) => index))\n        .range([top, height - bottom])\n        .paddingInner([spacingInner])\n        .paddingOuter([spacingOuter]);\n    }\n\n    return scale\n      .scaleLinear()\n      .domain(domain)\n      .range([height - bottom, top]);\n  }\n\n  calcAreas(x, y, series) {\n    const {horizontal, colors, keys} = this.props;\n\n    if (horizontal) {\n      return array.merge(\n        series.map((serie, keyIndex) => {\n          return serie.map((entry, entryIndex) => {\n            const path = shape\n              .area()\n              .x0((d) => x(d[0]))\n              .x1((d) => x(d[1]))\n              .y((d, _index) =>\n                _index === 0 ? y(entryIndex) : y(entryIndex) + y.bandwidth(),\n              )\n              .defined((d) => !isNaN(d[0]) && !isNaN(d[1]))([entry, entry]);\n\n            return {\n              path,\n              color: colors[keyIndex],\n              key: keys[keyIndex],\n            };\n          });\n        }),\n      );\n    }\n\n    return array.merge(\n      series.map((serie, keyIndex) => {\n        return serie.map((entry, entryIndex) => {\n          const path = shape\n            .area()\n            .y0((d) => y(d[0]))\n            .y1((d) => y(d[1]))\n            .x((d, _index) =>\n              _index === 0 ? x(entryIndex) : x(entryIndex) + x.bandwidth(),\n            )\n            .defined((d) => !isNaN(d[0]) && !isNaN(d[1]))([entry, entry]);\n\n          return {\n            path,\n            color: colors[keyIndex],\n            key: keys[keyIndex],\n          };\n        });\n      }),\n    );\n  }\n\n  calcExtent(values) {\n    const {gridMax, gridMin} = this.props;\n\n    return array.extent([...values, gridMin, gridMax]);\n  }\n\n  calcIndexes(values) {\n    return values.map((_, index) => index);\n  }\n\n  getSeries() {\n    const {data, keys, offset, order, valueAccessor} = this.props;\n\n    return shape\n      .stack()\n      .keys(keys)\n      .value((item, key) => valueAccessor({item, key}))\n      .order(order)\n      .offset(offset)(data);\n  }\n\n  render() {\n    const {\n      data,\n      animate,\n      animationDuration,\n      style,\n      numberOfTicks,\n      children,\n      horizontal,\n    } = this.props;\n\n    const {height, width} = this.state;\n\n    if (data.length === 0) {\n      return <View style={style} />;\n    }\n\n    const series = this.getSeries();\n\n    //double merge arrays to extract just the values\n    const values = array.merge(array.merge(series));\n    const indexes = this.calcIndexes(values);\n\n    const extent = this.calcExtent(values);\n    const ticks = array.ticks(extent[0], extent[1], numberOfTicks);\n\n    const xDomain = horizontal ? extent : indexes;\n    const yDomain = horizontal ? indexes : extent;\n\n    const x = this.calcXScale(xDomain);\n    const y = this.calcYScale(yDomain);\n\n    const bandwidth = horizontal ? y.bandwidth() : x.bandwidth();\n\n    const areas = this.calcAreas(x, y, series);\n\n    const extraProps = {\n      x,\n      y,\n      width,\n      height,\n      ticks,\n      data,\n      bandwidth,\n    };\n\n    return (\n      <View style={style}>\n        <View style={{flex: 1}} onLayout={(event) => this._onLayout(event)}>\n          {height > 0 && width > 0 && (\n            <Svg style={{height, width}}>\n              {React.Children.map(children, (child) => {\n                if (child && child.props.belowChart) {\n                  return React.cloneElement(child, extraProps);\n                }\n                return null;\n              })}\n              {areas.map((bar, index) => {\n                const keyIndex = index % data.length;\n                const key = `${keyIndex}-${bar.key}`;\n                const {svg} = data[keyIndex][bar.key];\n\n                return (\n                  <Path\n                    key={key}\n                    fill={bar.color}\n                    {...svg}\n                    d={bar.path}\n                    animate={animate}\n                    animationDuration={animationDuration}\n                  />\n                );\n              })}\n              {React.Children.map(children, (child) => {\n                if (child && !child.props.belowChart) {\n                  return React.cloneElement(child, extraProps);\n                }\n                return null;\n              })}\n            </Svg>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nBarChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object),\n  keys: PropTypes.arrayOf(PropTypes.string).isRequired,\n  colors: PropTypes.arrayOf(PropTypes.string).isRequired,\n  offset: PropTypes.func,\n  order: PropTypes.func,\n  style: PropTypes.any,\n  spacingInner: PropTypes.number,\n  spacingOuter: PropTypes.number,\n  animate: PropTypes.bool,\n  animationDuration: PropTypes.number,\n  contentInset: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number,\n  }),\n  gridMin: PropTypes.number,\n  gridMax: PropTypes.number,\n  valueAccessor: PropTypes.func,\n};\n\nBarChart.defaultProps = {\n  spacingInner: 0.05,\n  spacingOuter: 0.05,\n  offset: shape.stackOffsetNone,\n  order: shape.stackOrderNone,\n  width: 100,\n  height: 100,\n  showZeroAxis: true,\n  contentInset: {},\n  numberOfTicks: 10,\n  showGrid: true,\n  valueAccessor: ({item, key}) => item[key],\n};\n\nexport default BarChart;\n"]}