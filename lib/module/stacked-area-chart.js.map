{"version":3,"sources":["stacked-area-chart.js"],"names":["AreaStack","height","width","event","nativeEvent","layout","setState","props","data","keys","colors","animate","animationDuration","style","curve","numberOfTicks","contentInset","top","bottom","left","right","gridMin","gridMax","children","offset","order","svgs","xAccessor","xScale","clampY","clampX","state","length","series","shape","stack","yValues","array","merge","xValues","map","item","index","yExtent","extent","xExtent","yMin","yMax","xMin","xMax","y","scale","scaleLinear","domain","range","clamp","x","ticks","areas","serie","path","area","d","idx","y0","y1","_","key","color","extraProps","flex","_onLayout","React","Children","child","belowChart","cloneElement","stackOrderNone","stackOffsetNone","PureComponent","propTypes","PropTypes","arrayOf","object","isRequired","string","func","any","bool","number","showGrid","defaultProps","curveLinear","strokeWidth"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport * as array from 'd3-array';\nimport * as scale from 'd3-scale';\nimport * as shape from 'd3-shape';\nimport React, {PureComponent} from 'react';\nimport {View} from 'react-native';\nimport {Svg} from 'react-native-svg';\nimport Path from './animated-path';\n\nclass AreaStack extends PureComponent {\n  static extractDataPoints(\n    data,\n    keys,\n    order = shape.stackOrderNone,\n    offset = shape.stackOffsetNone,\n  ) {\n    const series = shape.stack().keys(keys).order(order).offset(offset)(data);\n\n    //double merge arrays to extract just the values\n    return array.merge(array.merge(series));\n  }\n\n  state = {\n    height: 0,\n    width: 0,\n  };\n\n  _onLayout(event) {\n    const {\n      nativeEvent: {\n        layout: {height, width},\n      },\n    } = event;\n    this.setState({height, width});\n  }\n\n  render() {\n    const {\n      data,\n      keys,\n      colors,\n      animate,\n      animationDuration,\n      style,\n      curve,\n      numberOfTicks,\n      contentInset: {top = 0, bottom = 0, left = 0, right = 0},\n      gridMin,\n      gridMax,\n      children,\n      offset,\n      order,\n      svgs,\n      xAccessor,\n      xScale,\n      clampY,\n      clampX,\n    } = this.props;\n\n    const {height, width} = this.state;\n\n    if (data.length === 0) {\n      return <View style={style} />;\n    }\n\n    const series = shape.stack().keys(keys).order(order).offset(offset)(data);\n\n    //double merge arrays to extract just the yValues\n    const yValues = array.merge(array.merge(series));\n    const xValues = data.map((item, index) => xAccessor({item, index}));\n\n    const yExtent = array.extent([...yValues, gridMin, gridMax]);\n    const xExtent = array.extent(xValues);\n\n    const {\n      yMin = yExtent[0],\n      yMax = yExtent[1],\n      xMin = xExtent[0],\n      xMax = xExtent[1],\n    } = this.props;\n\n    //invert range to support svg coordinate system\n    const y = scale\n      .scaleLinear()\n      .domain([yMin, yMax])\n      .range([height - bottom, top])\n      .clamp(clampY);\n\n    const x = xScale()\n      .domain([xMin, xMax])\n      .range([left, width - right])\n      .clamp(clampX);\n\n    const ticks = y.ticks(numberOfTicks);\n\n    const areas = series.map((serie, index) => {\n      const path = shape\n        .area()\n        .x((d, idx) => x(xAccessor({item: d.data, idx})))\n        .y0((d) => y(d[0]))\n        .y1((d) => y(d[1]))\n        .curve(curve)(data.map((_, idx) => serie[idx]));\n\n      return {\n        path,\n        key: keys[index],\n        color: colors[index],\n      };\n    });\n\n    const extraProps = {\n      x,\n      y,\n      width,\n      height,\n      ticks,\n    };\n\n    return (\n      <View style={style}>\n        <View style={{flex: 1}} onLayout={(event) => this._onLayout(event)}>\n          {height > 0 && width > 0 && (\n            <Svg style={{height, width}}>\n              {React.Children.map(children, (child) => {\n                if (child && child.props.belowChart) {\n                  return React.cloneElement(child, extraProps);\n                }\n                return null;\n              })}\n              {areas.map((area, index) => (\n                <Path\n                  key={area.key}\n                  fill={area.color}\n                  {...svgs[index]}\n                  animate={animate}\n                  animationDuration={animationDuration}\n                  d={area.path}\n                />\n              ))}\n              {React.Children.map(children, (child) => {\n                if (child && !child.props.belowChart) {\n                  return React.cloneElement(child, extraProps);\n                }\n                return null;\n              })}\n            </Svg>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nAreaStack.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  keys: PropTypes.arrayOf(PropTypes.string).isRequired,\n  colors: PropTypes.arrayOf(PropTypes.string).isRequired,\n  svgs: PropTypes.arrayOf(PropTypes.object),\n  offset: PropTypes.func,\n  order: PropTypes.func,\n  style: PropTypes.any,\n  animate: PropTypes.bool,\n  animationDuration: PropTypes.number,\n  contentInset: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number,\n  }),\n  numberOfTicks: PropTypes.number,\n  showGrid: PropTypes.bool,\n  xScale: PropTypes.func,\n  xAccessor: PropTypes.func,\n\n  yMin: PropTypes.any,\n  yMax: PropTypes.any,\n  xMin: PropTypes.any,\n  xMax: PropTypes.any,\n  clampX: PropTypes.bool,\n  clampY: PropTypes.bool,\n};\n\nAreaStack.defaultProps = {\n  curve: shape.curveLinear,\n  offset: shape.stackOffsetNone,\n  order: shape.stackOrderNone,\n  svgs: [],\n  strokeWidth: 2,\n  contentInset: {},\n  numberOfTicks: 10,\n  showGrid: true,\n  xScale: scale.scaleLinear,\n  xAccessor: ({index}) => index,\n};\n\nexport default AreaStack;\n"]}