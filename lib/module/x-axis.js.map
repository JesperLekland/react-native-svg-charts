{"version":3,"sources":["x-axis.js"],"names":["XAxis","width","height","event","nativeEvent","layout","state","setState","domain","props","scale","spacingInner","spacingOuter","contentInset","left","right","x","range","d3Scale","scaleBand","paddingInner","paddingOuter","value","bandwidth","style","data","xAccessor","formatLabel","numberOfTicks","svg","children","min","max","length","values","map","item","index","extent","array","_getX","ticks","extraProps","flexGrow","_onLayout","opacity","fontSize","position","top","React","Children","child","cloneElement","valueSvg","PureComponent","propTypes","PropTypes","arrayOf","oneOfType","number","object","isRequired","func","shape","oneOf","scaleTime","scaleLinear","any","defaultProps"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {Text, View} from 'react-native';\nimport * as d3Scale from 'd3-scale';\nimport * as array from 'd3-array';\nimport Svg, {G, Text as SVGText} from 'react-native-svg';\n\nclass XAxis extends PureComponent {\n  state = {\n    width: 0,\n    height: 0,\n  };\n\n  _onLayout(event) {\n    const {\n      nativeEvent: {\n        layout: {width, height},\n      },\n    } = event;\n\n    if (width !== this.state.width) {\n      this.setState({width, height});\n    }\n  }\n\n  _getX(domain) {\n    const {\n      scale,\n      spacingInner,\n      spacingOuter,\n      contentInset: {left = 0, right = 0},\n    } = this.props;\n\n    const {width} = this.state;\n\n    const x = scale()\n      .domain(domain)\n      .range([left, width - right]);\n\n    if (scale === d3Scale.scaleBand) {\n      x.paddingInner([spacingInner]).paddingOuter([spacingOuter]);\n\n      //add half a bar to center label\n      return (value) => x(value) + x.bandwidth() / 2;\n    }\n\n    return x;\n  }\n\n  render() {\n    const {\n      style,\n      scale,\n      data,\n      xAccessor,\n      formatLabel,\n      numberOfTicks,\n      svg,\n      children,\n      min,\n      max,\n    } = this.props;\n\n    const {height, width} = this.state;\n\n    if (data.length === 0) {\n      return <View style={style} />;\n    }\n\n    const values = data.map((item, index) => xAccessor({item, index}));\n    const extent = array.extent(values);\n    const domain =\n      scale === d3Scale.scaleBand\n        ? values\n        : [min || extent[0], max || extent[1]];\n\n    const x = this._getX(domain);\n    const ticks = numberOfTicks ? x.ticks(numberOfTicks) : values;\n\n    const extraProps = {\n      x,\n      ticks,\n      height,\n      formatLabel,\n    };\n\n    return (\n      <View style={style}>\n        <View style={{flexGrow: 1}} onLayout={(event) => this._onLayout(event)}>\n          {/*invisible text to allow for parent resizing*/}\n          <Text style={{opacity: 0, fontSize: svg.fontSize}}>\n            {formatLabel(ticks[0], 0)}\n          </Text>\n          {height > 0 && width > 0 && (\n            <Svg\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                height,\n                width,\n              }}>\n              <G>\n                {React.Children.map(children, (child) => {\n                  return React.cloneElement(child, extraProps);\n                })}\n                {// don't render labels if width isn't measured yet,\n                // causes rendering issues\n                width > 0 &&\n                  ticks.map((value, index) => {\n                    const {svg: valueSvg = {}} = data[index] || {};\n\n                    return (\n                      <SVGText\n                        textAnchor={'middle'}\n                        originX={x(value)}\n                        alignmentBaseline={'hanging'}\n                        {...svg}\n                        {...valueSvg}\n                        key={index}\n                        x={x(value)}>\n                        {formatLabel(value, index)}\n                      </SVGText>\n                    );\n                  })}\n              </G>\n            </Svg>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nXAxis.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  ).isRequired,\n  spacingInner: PropTypes.number,\n  spacingOuter: PropTypes.number,\n  formatLabel: PropTypes.func,\n  contentInset: PropTypes.shape({\n    left: PropTypes.number,\n    right: PropTypes.number,\n  }),\n  scale: PropTypes.oneOf([\n    d3Scale.scaleTime,\n    d3Scale.scaleLinear,\n    d3Scale.scaleBand,\n  ]),\n  numberOfTicks: PropTypes.number,\n  xAccessor: PropTypes.func,\n  svg: PropTypes.object,\n  min: PropTypes.any,\n  max: PropTypes.any,\n};\n\nXAxis.defaultProps = {\n  spacingInner: 0.05,\n  spacingOuter: 0.05,\n  contentInset: {},\n  svg: {},\n  xAccessor: ({index}) => index,\n  scale: d3Scale.scaleLinear,\n  formatLabel: (value) => value,\n};\n\nexport default XAxis;\n"]}