{"version":3,"sources":["grid.js"],"names":["Horizontal","ticks","y","svg","map","tick","Vertical","x","index","Both","props","propTypes","PropTypes","func","dataPoints","array","object","Direction","VERTICAL","HORIZONTAL","BOTH","Grid","direction","oneOf","Object","values","belowChart","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {G, Line} from 'react-native-svg';\n\nconst Horizontal = ({ticks = [], y, svg}) => {\n  return (\n    <G>\n      {ticks.map((tick) => (\n        <Line\n          key={tick}\n          x1={'0%'}\n          x2={'100%'}\n          y1={y(tick)}\n          y2={y(tick)}\n          strokeWidth={1}\n          stroke={'rgba(0,0,0,0.2)'}\n          {...svg}\n        />\n      ))}\n    </G>\n  );\n};\n\nconst Vertical = ({ticks = [], x, svg}) => {\n  return (\n    <G>\n      {ticks.map((tick, index) => (\n        <Line\n          key={index}\n          y1={'0%'}\n          y2={'100%'}\n          x1={x(tick)}\n          x2={x(tick)}\n          strokeWidth={1}\n          stroke={'rgba(0,0,0,0.2)'}\n          {...svg}\n        />\n      ))}\n    </G>\n  );\n};\n\nconst Both = (props) => {\n  return (\n    <G>\n      <Horizontal {...props} />\n      <Vertical {...props} />\n    </G>\n  );\n};\n\nVertical.propTypes = {\n  x: PropTypes.func,\n  dataPoints: PropTypes.array,\n  svg: PropTypes.object,\n};\n\nHorizontal.propTypes = {\n  y: PropTypes.func,\n  ticks: PropTypes.array,\n};\n\nBoth.propTypes = {\n  ...Vertical.propTypes,\n  ...Horizontal.propTypes,\n};\n\nconst Direction = {\n  VERTICAL: 'VERTICAL',\n  HORIZONTAL: 'HORIZONTAL',\n  BOTH: 'BOTH',\n};\n\nconst Grid = ({direction, ...props}) => {\n  if (direction === Direction.VERTICAL) {\n    return <Vertical {...props} />;\n  } else if (direction === Direction.HORIZONTAL) {\n    return <Horizontal {...props} />;\n  } else if (direction === Direction.BOTH) {\n    return <Both {...props} />;\n  }\n\n  return null;\n};\n\nGrid.Direction = Direction;\n\nGrid.propTypes = {\n  direction: PropTypes.oneOf(Object.values(Direction)),\n  belowChart: PropTypes.bool,\n  svg: PropTypes.object,\n};\n\nGrid.defaultProps = {\n  direction: Direction.HORIZONTAL,\n  belowChart: true,\n};\n\nexport default Grid;\n"]}