{"version":3,"sources":["progress-circle.js"],"names":["ProgressCircle","height","width","event","nativeEvent","layout","setState","props","style","progressColor","backgroundColor","strokeWidth","startAngle","endAngle","animate","animateDuration","children","cornerRadius","progress","state","outerDiameter","Math","min","isFinite","isNaN","data","key","value","color","pieSlices","shape","pie","d","sort","a","arcs","map","slice","index","path","arc","outerRadius","innerRadius","extraProps","_onLayout","React","Children","child","belowChart","cloneElement","arcShape","PureComponent","propTypes","PropTypes","number","isRequired","any","bool","defaultProps","PI"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react';\nimport {View} from 'react-native';\nimport PropTypes from 'prop-types';\nimport * as shape from 'd3-shape';\nimport Path from './animated-path';\nimport Svg, {G} from 'react-native-svg';\n\nclass ProgressCircle extends PureComponent {\n  state = {\n    height: 0,\n    width: 0,\n  };\n\n  _onLayout(event) {\n    const {\n      nativeEvent: {\n        layout: {height, width},\n      },\n    } = event;\n    this.setState({height, width});\n  }\n\n  render() {\n    const {\n      style,\n      progressColor,\n      backgroundColor,\n      strokeWidth,\n      startAngle,\n      endAngle,\n      animate,\n      animateDuration,\n      children,\n      cornerRadius,\n    } = this.props;\n\n    let {progress} = this.props;\n\n    const {height, width} = this.state;\n\n    const outerDiameter = Math.min(width, height);\n\n    if (!isFinite(progress) || isNaN(progress)) {\n      progress = 0;\n    }\n\n    // important order to have progress render over \"rest\"\n    const data = [\n      {\n        key: 'rest',\n        value: 1 - progress,\n        color: backgroundColor,\n      },\n      {\n        key: 'progress',\n        value: progress,\n        color: progressColor,\n      },\n    ];\n\n    const pieSlices = shape\n      .pie()\n      .value((d) => d.value)\n      .sort((a) => (a.key === 'rest' ? 1 : -1))\n      .startAngle(startAngle)\n      .endAngle(endAngle)(data);\n\n    const arcs = pieSlices.map((slice, index) => ({\n      ...data[index],\n      ...slice,\n      path: shape\n        .arc()\n        .outerRadius(outerDiameter / 2) // Radius of the pie\n        .innerRadius(outerDiameter / 2 - strokeWidth) // Inner radius: to create a donut or pie\n        .startAngle(index === 0 ? startAngle : slice.startAngle)\n        .endAngle(index === 0 ? endAngle : slice.endAngle)\n        .cornerRadius(cornerRadius)(),\n    }));\n\n    const extraProps = {\n      width,\n      height,\n    };\n\n    return (\n      <View style={style} onLayout={(event) => this._onLayout(event)}>\n        {height > 0 && width > 0 && (\n          <Svg style={{height, width}}>\n            {/* center the progress circle*/}\n            <G x={width / 2} y={height / 2}>\n              {React.Children.map(children, (child) => {\n                if (child && child.props.belowChart) {\n                  return React.cloneElement(child, extraProps);\n                }\n                return null;\n              })}\n              {arcs.map((arcShape, index) => {\n                return (\n                  <Path\n                    key={index}\n                    fill={arcShape.color}\n                    d={arcShape.path}\n                    animate={animate}\n                    animationDuration={animateDuration}\n                  />\n                );\n              })}\n              {React.Children.map(children, (child) => {\n                if (child && !child.props.belowChart) {\n                  return React.cloneElement(child, extraProps);\n                }\n                return null;\n              })}\n            </G>\n          </Svg>\n        )}\n      </View>\n    );\n  }\n}\n\nProgressCircle.propTypes = {\n  progress: PropTypes.number.isRequired,\n  style: PropTypes.any,\n  progressColor: PropTypes.any,\n  backgroundColor: PropTypes.any,\n  strokeWidth: PropTypes.number,\n  startAngle: PropTypes.number,\n  endAngle: PropTypes.number,\n  animate: PropTypes.bool,\n  cornerRadius: PropTypes.number,\n  animateDuration: PropTypes.number,\n};\n\nProgressCircle.defaultProps = {\n  progressColor: 'black',\n  backgroundColor: '#ECECEC',\n  strokeWidth: 5,\n  startAngle: 0,\n  endAngle: Math.PI * 2,\n  cornerRadius: 45,\n};\n\nexport default ProgressCircle;\n"]}