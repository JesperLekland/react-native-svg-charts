{"version":3,"sources":["chart-grouped.js"],"names":["ChartGrouped","width","height","event","nativeEvent","layout","setState","props","data","xAccessor","yAccessor","yScale","xScale","style","animate","animationDuration","numberOfTicks","contentInset","top","bottom","left","right","gridMax","gridMin","clampX","clampY","svg","children","state","length","mappedData","map","dataArray","item","index","y","x","yValues","array","merge","xValues","yExtent","extent","xExtent","yMin","yMax","xMin","xMax","domain","range","clamp","paths","createPaths","ticks","extraProps","flex","_onLayout","React","Children","child","belowChart","cloneElement","path","pathSvg","PureComponent","propTypes","Chart","PropTypes","arrayOf","shape","oneOfType","object","number","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import * as array from 'd3-array';\nimport PropTypes from 'prop-types';\nimport React, {PureComponent} from 'react';\nimport {View} from 'react-native';\nimport Svg from 'react-native-svg';\nimport Path from '../animated-path';\nimport Chart from './chart';\n\nclass ChartGrouped extends PureComponent {\n  state = {\n    width: 0,\n    height: 0,\n  };\n\n  _onLayout(event) {\n    const {\n      nativeEvent: {\n        layout: {height, width},\n      },\n    } = event;\n    this.setState({height, width});\n  }\n\n  createPaths() {\n    throw 'Extending \"ChartGrouped\" requires you to override \"createPaths';\n  }\n\n  render() {\n    const {\n      data,\n      xAccessor,\n      yAccessor,\n      yScale,\n      xScale,\n      style,\n      animate,\n      animationDuration,\n      numberOfTicks,\n      contentInset: {top = 0, bottom = 0, left = 0, right = 0},\n      gridMax,\n      gridMin,\n      clampX,\n      clampY,\n      svg,\n      children,\n    } = this.props;\n\n    const {width, height} = this.state;\n\n    if (data.length === 0) {\n      return <View style={style} />;\n    }\n\n    const mappedData = data.map((dataArray) =>\n      dataArray.data.map((item, index) => ({\n        y: yAccessor({item, index}),\n        x: xAccessor({item, index}),\n      })),\n    );\n\n    const yValues = array.merge(mappedData).map((item) => item.y);\n    const xValues = array.merge(mappedData).map((item) => item.x);\n\n    const yExtent = array.extent([...yValues, gridMin, gridMax]);\n    const xExtent = array.extent([...xValues]);\n\n    const {\n      yMin = yExtent[0],\n      yMax = yExtent[1],\n      xMin = xExtent[0],\n      xMax = xExtent[1],\n    } = this.props;\n\n    //invert range to support svg coordinate system\n    const y = yScale()\n      .domain([yMin, yMax])\n      .range([height - bottom, top])\n      .clamp(clampY);\n\n    const x = xScale()\n      .domain([xMin, xMax])\n      .range([left, width - right])\n      .clamp(clampX);\n\n    const paths = this.createPaths({\n      data: mappedData,\n      x,\n      y,\n    });\n\n    const ticks = y.ticks(numberOfTicks);\n\n    const extraProps = {\n      x,\n      y,\n      data,\n      ticks,\n      width,\n      height,\n      ...paths,\n    };\n\n    return (\n      <View style={style}>\n        <View style={{flex: 1}} onLayout={(event) => this._onLayout(event)}>\n          {height > 0 && width > 0 && (\n            <Svg style={{height, width}}>\n              {React.Children.map(children, (child) => {\n                if (child && child.props.belowChart) {\n                  return React.cloneElement(child, extraProps);\n                }\n                return null;\n              })}\n              {paths.path.map((path, index) => {\n                const {svg: pathSvg} = data[index];\n                return (\n                  <Path\n                    key={path}\n                    fill={'none'}\n                    {...svg}\n                    {...pathSvg}\n                    d={path}\n                    animate={animate}\n                    animationDuration={animationDuration}\n                  />\n                );\n              })}\n              {React.Children.map(children, (child) => {\n                if (child && !child.props.belowChart) {\n                  return React.cloneElement(child, extraProps);\n                }\n                return null;\n              })}\n            </Svg>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nChartGrouped.propTypes = {\n  ...Chart.propTypes,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.object),\n        PropTypes.arrayOf(PropTypes.number),\n        PropTypes.arrayOf(PropTypes.array),\n      ]),\n      svg: PropTypes.object,\n    }),\n  ).isRequired,\n};\n\nChartGrouped.defaultProps = {\n  ...Chart.defaultProps,\n};\n\nexport default ChartGrouped;\n"]}