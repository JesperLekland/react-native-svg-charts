{"version":3,"sources":["chart.js"],"names":["Chart","width","height","event","nativeEvent","layout","setState","props","data","xAccessor","yAccessor","yScale","xScale","style","animate","animationDuration","numberOfTicks","contentInset","top","bottom","left","right","gridMax","gridMin","clampX","clampY","svg","children","state","length","mappedData","map","item","index","y","x","yValues","xValues","yExtent","array","extent","xExtent","yMin","yMax","xMin","xMax","domain","range","clamp","paths","createPaths","ticks","extraProps","flex","_onLayout","React","Children","child","belowChart","cloneElement","path","PureComponent","propTypes","PropTypes","oneOfType","arrayOf","object","number","isRequired","any","bool","curve","func","shape","defaultProps","curveLinear","scale","scaleLinear"],"mappings":"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","sourcesContent":["import * as array from 'd3-array';\nimport * as scale from 'd3-scale';\nimport * as shape from 'd3-shape';\nimport PropTypes from 'prop-types';\nimport React, {PureComponent} from 'react';\nimport {View} from 'react-native';\nimport Svg from 'react-native-svg';\nimport Path from '../animated-path';\n\nclass Chart extends PureComponent {\n  state = {\n    width: 0,\n    height: 0,\n  };\n\n  _onLayout(event) {\n    const {\n      nativeEvent: {\n        layout: {height, width},\n      },\n    } = event;\n    this.setState({height, width});\n  }\n\n  createPaths() {\n    throw 'Extending \"Chart\" requires you to override \"createPaths';\n  }\n\n  render() {\n    const {\n      data,\n      xAccessor,\n      yAccessor,\n      yScale,\n      xScale,\n      style,\n      animate,\n      animationDuration,\n      numberOfTicks,\n      contentInset: {top = 0, bottom = 0, left = 0, right = 0},\n      gridMax,\n      gridMin,\n      clampX,\n      clampY,\n      svg,\n      children,\n    } = this.props;\n\n    const {width, height} = this.state;\n\n    if (data.length === 0) {\n      return <View style={style} />;\n    }\n\n    const mappedData = data.map((item, index) => ({\n      y: yAccessor({item, index}),\n      x: xAccessor({item, index}),\n    }));\n\n    const yValues = mappedData.map((item) => item.y);\n    const xValues = mappedData.map((item) => item.x);\n\n    const yExtent = array.extent([...yValues, gridMin, gridMax]);\n    const xExtent = array.extent([...xValues]);\n\n    const {\n      yMin = yExtent[0],\n      yMax = yExtent[1],\n      xMin = xExtent[0],\n      xMax = xExtent[1],\n    } = this.props;\n\n    //invert range to support svg coordinate system\n    const y = yScale()\n      .domain([yMin, yMax])\n      .range([height - bottom, top])\n      .clamp(clampY);\n\n    const x = xScale()\n      .domain([xMin, xMax])\n      .range([left, width - right])\n      .clamp(clampX);\n\n    const paths = this.createPaths({\n      data: mappedData,\n      x,\n      y,\n    });\n\n    const ticks = y.ticks(numberOfTicks);\n\n    const extraProps = {\n      x,\n      y,\n      data,\n      ticks,\n      width,\n      height,\n      ...paths,\n    };\n\n    return (\n      <View style={style}>\n        <View style={{flex: 1}} onLayout={(event) => this._onLayout(event)}>\n          {height > 0 && width > 0 && (\n            <Svg style={{height, width}}>\n              {React.Children.map(children, (child) => {\n                if (child && child.props.belowChart) {\n                  return React.cloneElement(child, extraProps);\n                }\n                return null;\n              })}\n              <Path\n                fill={'none'}\n                {...svg}\n                d={paths.path}\n                animate={animate}\n                animationDuration={animationDuration}\n              />\n              {React.Children.map(children, (child) => {\n                if (child && !child.props.belowChart) {\n                  return React.cloneElement(child, extraProps);\n                }\n                return null;\n              })}\n            </Svg>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nChart.propTypes = {\n  data: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.object),\n    PropTypes.arrayOf(PropTypes.number),\n    PropTypes.arrayOf(PropTypes.array),\n  ]).isRequired,\n  svg: PropTypes.object,\n\n  style: PropTypes.any,\n\n  animate: PropTypes.bool,\n  animationDuration: PropTypes.number,\n\n  curve: PropTypes.func,\n  contentInset: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number,\n  }),\n  numberOfTicks: PropTypes.number,\n\n  gridMin: PropTypes.number,\n  gridMax: PropTypes.number,\n\n  yMin: PropTypes.any,\n  yMax: PropTypes.any,\n  xMin: PropTypes.any,\n  xMax: PropTypes.any,\n  clampX: PropTypes.bool,\n  clampY: PropTypes.bool,\n\n  xScale: PropTypes.func,\n  yScale: PropTypes.func,\n\n  xAccessor: PropTypes.func,\n  yAccessor: PropTypes.func,\n};\n\nChart.defaultProps = {\n  svg: {},\n  width: 100,\n  height: 100,\n  curve: shape.curveLinear,\n  contentInset: {},\n  numberOfTicks: 10,\n  xScale: scale.scaleLinear,\n  yScale: scale.scaleLinear,\n  xAccessor: ({index}) => index,\n  yAccessor: ({item}) => item,\n};\n\nexport default Chart;\n"]}