{"version":3,"sources":["util.js"],"names":["util","sortDescending","_array","array","sort","a","b","Constants","gridStyle","position","left","right","height","backgroundColor","commonProps","svg","PropTypes","object","shadowSvg","shadowWidth","number","shadowOffset","style","any","animate","bool","animationDuration","curve","func","contentInset","shape","top","bottom","numberOfTicks","renderGradient","gridMin","gridMax","showGrid","gridProps","commonDefaultProps","strokeColor","strokeWidth","gridStroke","gridWidth"],"mappings":"yRAAA,6DAEA,GAAMA,CAAAA,IAAI,CAAG,CACXC,cADW,yBACIC,MADJ,CACY,CACrB,GAAMC,CAAAA,KAAK,iCAAOD,MAAP,CAAX,CACA,MAAOC,CAAAA,KAAK,CAACC,IAAN,CAAW,SAACC,CAAD,CAAIC,CAAJ,CAAU,CAC1B,GAAID,CAAC,CAAGC,CAAR,CAAW,CACT,MAAO,CAAC,CAAR,CACD,CACD,GAAIA,CAAC,CAAGD,CAAR,CAAW,CACT,MAAO,EAAP,CACD,CACD,MAAO,EAAP,CACD,CARM,CAAP,CASD,CAZU,CAAb,CAeO,GAAME,CAAAA,SAAS,CAAG,CACvBC,SAAS,CAAE,CACTC,QAAQ,CAAE,UADD,CAETC,IAAI,CAAE,CAFG,CAGTC,KAAK,CAAE,CAHE,CAITC,MAAM,CAAE,GAJC,CAKTC,eAAe,CAAE,iBALR,CADY,CAQvBC,WAAW,CAAE,CACXC,GAAG,CAAEC,mBAAUC,MADJ,CAEXC,SAAS,CAAEF,mBAAUC,MAFV,CAGXE,WAAW,CAAEH,mBAAUI,MAHZ,CAIXC,YAAY,CAAEL,mBAAUI,MAJb,CAMXE,KAAK,CAAEN,mBAAUO,GANN,CAQXC,OAAO,CAAER,mBAAUS,IARR,CASXC,iBAAiB,CAAEV,mBAAUI,MATlB,CAWXO,KAAK,CAAEX,mBAAUY,IAXN,CAYXC,YAAY,CAAEb,mBAAUc,KAAV,CAAgB,CAC5BC,GAAG,CAAEf,mBAAUI,MADa,CAE5BV,IAAI,CAAEM,mBAAUI,MAFY,CAG5BT,KAAK,CAAEK,mBAAUI,MAHW,CAI5BY,MAAM,CAAEhB,mBAAUI,MAJU,CAAhB,CAZH,CAkBXa,aAAa,CAAEjB,mBAAUI,MAlBd,CAoBXc,cAAc,CAAElB,mBAAUY,IApBf,CAsBXO,OAAO,CAAEnB,mBAAUI,MAtBR,CAuBXgB,OAAO,CAAEpB,mBAAUI,MAvBR,CAwBXiB,QAAQ,CAAErB,mBAAUS,IAxBT,CAyBXa,SAAS,CAAEtB,mBAAUC,MAzBV,CARU,CAmCvBsB,kBAAkB,CAAE,CAClBC,WAAW,CAAE,SADK,CAElBC,WAAW,CAAE,CAFK,CAGlBZ,YAAY,CAAE,EAHI,CAIlBI,aAAa,CAAE,EAJG,CAKlBI,QAAQ,CAAE,IALQ,CAMlBF,OAAO,CAAE,CANS,CAOlBC,OAAO,CAAE,CAPS,CAQlBM,UAAU,CAAE,iBARM,CASlBC,SAAS,CAAE,GATO,CAnCG,CAAlB,C,yCAgDQ3C,I","sourcesContent":["import PropTypes from 'prop-types';\n\nconst util = {\n  sortDescending(_array) {\n    const array = [..._array];\n    return array.sort((a, b) => {\n      if (a > b) {\n        return -1;\n      }\n      if (b > a) {\n        return 1;\n      }\n      return 0;\n    });\n  },\n};\n\nexport const Constants = {\n  gridStyle: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    height: 0.5,\n    backgroundColor: 'rgba(0,0,0,0.2)',\n  },\n  commonProps: {\n    svg: PropTypes.object,\n    shadowSvg: PropTypes.object,\n    shadowWidth: PropTypes.number,\n    shadowOffset: PropTypes.number,\n\n    style: PropTypes.any,\n\n    animate: PropTypes.bool,\n    animationDuration: PropTypes.number,\n\n    curve: PropTypes.func,\n    contentInset: PropTypes.shape({\n      top: PropTypes.number,\n      left: PropTypes.number,\n      right: PropTypes.number,\n      bottom: PropTypes.number,\n    }),\n    numberOfTicks: PropTypes.number,\n\n    renderGradient: PropTypes.func,\n\n    gridMin: PropTypes.number,\n    gridMax: PropTypes.number,\n    showGrid: PropTypes.bool,\n    gridProps: PropTypes.object,\n  },\n  commonDefaultProps: {\n    strokeColor: '#22B6B0',\n    strokeWidth: 2,\n    contentInset: {},\n    numberOfTicks: 10,\n    showGrid: true,\n    gridMin: 0,\n    gridMax: 0,\n    gridStroke: 'rgba(0,0,0,0.2)',\n    gridWidth: 0.5,\n  },\n};\n\nexport default util;\n"]}